{
  "name": "Lagrange Labs",
  "published": false,
  "research": [
    {
      "author": "tokensight",
      "title": "Tokensight | Lagrange Labs: A Cryptoeconomic Risk Analysis",
      "url": "https://paragraph.xyz/@tokensightxyz/lagrange-cryptoeconomic-risk-analysis"
    }
  ],
  "riskAnalysis": {
    "sections": [
      {
        "category": "AVS",
        "risks": [
          {
            "name": "Business Model",
            "elements": [
              {
                "description": "Pure Wallet",
                "risk": "low",
                "comment": "\"Pure Wallet\" business model (the most secure one for newborn protocols) where no native AVS token is involved, and user fees are paid in a purely neutral denomination (like ETH)."
              }
            ]
          },
          {
            "name": "Protocol Security",
            "elements": [
              {
                "description": "Code Audits",
                "comment": "Three successive audits performed by one entity.",
                "links": [
                  {
                    "label": "view github",
                    "href": "https://github.com/Lagrange-Labs/lagrange-contracts/tree/develop/audits"
                  }
                ],
                "risk": "medium"
              }
            ]
          },
          {
            "name": "Operator Profile",
            "elements": [
              {
                "description": "Reputation & Entrenchment Status",
                "risk": "high",
                "comment": "Since we are at the very early stages of EigenLayer, operators' reputation was classified as unknown. Operator's entrenchment level indicates how entrenched EigenDA's operators are on other AVSs. The small number of AVSs currently live helps exacerbate this risk, in a pooled security context."
              }
            ]
          }
        ]
      },
      {
        "category": "Lagrange ZK Coprocessor",
        "risks": [
          {
            "name": "Coprocessor & Verifiable Database",
            "elements": [
              {
                "description": "Database Replication & Query Processing",
                "risk": "low",
                "comment": "Lagrange’s ZK Coprocessor indexes and processes the storing of the original database at each block and, through zero-knowledge computations, provably “inserts” this data into a replicated Verifiable Database, which then supports efficient and provable queries. These queries run in parallel over this new database when external protocols/applications request it.<br><br>Provers are rewarded for timely and valid proof generation."
              }
            ]
          },
          {
            "name": "Prover Network Profile",
            "elements": [
              {
                "description": "Decentralization & Security Status",
                "comment": "The Coprocessor uses the MapReduce framework along with ZK proofs (<b>zkMapReduce</b>) to ensure the correctness of distributed computations across nodes to handle large-scale databases efficiently and in parallel by dividing it into chunks. Each node generates proofs for their assigned chunk, which are then recursively combined into a single proof, validating the entire process.<br><br>Even in the case of a 2/3 stake attack toward the Prover network, ZK-proof generation is not affected; only slight liveness issues may occur.<br><br><i>Being structured as a pure ZK system, Lagrange ZK Coprocessor is extremely airtight toward potential safety exploits.<br><br>Degree of decentralization in the sequencer and the overall Prover network are unknown.</i>",
                "risk": "low"
              }
            ]
          }
        ]
      }
    ]
  }
}
